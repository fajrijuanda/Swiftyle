/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Checkout as PrismaCheckout } from "@prisma/client";

export class CheckoutServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CheckoutCountArgs, "select">): Promise<number> {
    return this.prisma.checkout.count(args);
  }

  async checkouts<T extends Prisma.CheckoutFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CheckoutFindManyArgs>
  ): Promise<PrismaCheckout[]> {
    return this.prisma.checkout.findMany<Prisma.CheckoutFindManyArgs>(args);
  }
  async checkout<T extends Prisma.CheckoutFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CheckoutFindUniqueArgs>
  ): Promise<PrismaCheckout | null> {
    return this.prisma.checkout.findUnique(args);
  }
  async createCheckout<T extends Prisma.CheckoutCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CheckoutCreateArgs>
  ): Promise<PrismaCheckout> {
    return this.prisma.checkout.create<T>(args);
  }
  async updateCheckout<T extends Prisma.CheckoutUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CheckoutUpdateArgs>
  ): Promise<PrismaCheckout> {
    return this.prisma.checkout.update<T>(args);
  }
  async deleteCheckout<T extends Prisma.CheckoutDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CheckoutDeleteArgs>
  ): Promise<PrismaCheckout> {
    return this.prisma.checkout.delete(args);
  }
}
