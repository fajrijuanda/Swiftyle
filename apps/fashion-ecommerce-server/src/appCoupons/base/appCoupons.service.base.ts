/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AppCoupons as PrismaAppCoupons } from "@prisma/client";

export class AppCouponsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AppCouponsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.appCoupons.count(args);
  }

  async appCouponsItems<T extends Prisma.AppCouponsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppCouponsFindManyArgs>
  ): Promise<PrismaAppCoupons[]> {
    return this.prisma.appCoupons.findMany<Prisma.AppCouponsFindManyArgs>(args);
  }
  async appCoupons<T extends Prisma.AppCouponsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppCouponsFindUniqueArgs>
  ): Promise<PrismaAppCoupons | null> {
    return this.prisma.appCoupons.findUnique(args);
  }
  async createAppCoupons<T extends Prisma.AppCouponsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppCouponsCreateArgs>
  ): Promise<PrismaAppCoupons> {
    return this.prisma.appCoupons.create<T>(args);
  }
  async updateAppCoupons<T extends Prisma.AppCouponsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppCouponsUpdateArgs>
  ): Promise<PrismaAppCoupons> {
    return this.prisma.appCoupons.update<T>(args);
  }
  async deleteAppCoupons<T extends Prisma.AppCouponsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppCouponsDeleteArgs>
  ): Promise<PrismaAppCoupons> {
    return this.prisma.appCoupons.delete(args);
  }
}
