/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Payments as PrismaPayments } from "@prisma/client";

export class PaymentsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PaymentsCountArgs, "select">): Promise<number> {
    return this.prisma.payments.count(args);
  }

  async paymentsItems<T extends Prisma.PaymentsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentsFindManyArgs>
  ): Promise<PrismaPayments[]> {
    return this.prisma.payments.findMany<Prisma.PaymentsFindManyArgs>(args);
  }
  async payments<T extends Prisma.PaymentsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentsFindUniqueArgs>
  ): Promise<PrismaPayments | null> {
    return this.prisma.payments.findUnique(args);
  }
  async createPayments<T extends Prisma.PaymentsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentsCreateArgs>
  ): Promise<PrismaPayments> {
    return this.prisma.payments.create<T>(args);
  }
  async updatePayments<T extends Prisma.PaymentsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentsUpdateArgs>
  ): Promise<PrismaPayments> {
    return this.prisma.payments.update<T>(args);
  }
  async deletePayments<T extends Prisma.PaymentsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentsDeleteArgs>
  ): Promise<PrismaPayments> {
    return this.prisma.payments.delete(args);
  }
}
