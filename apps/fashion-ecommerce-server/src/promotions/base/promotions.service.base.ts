/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Promotions as PrismaPromotions } from "@prisma/client";

export class PromotionsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PromotionsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.promotions.count(args);
  }

  async promotionsItems<T extends Prisma.PromotionsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PromotionsFindManyArgs>
  ): Promise<PrismaPromotions[]> {
    return this.prisma.promotions.findMany<Prisma.PromotionsFindManyArgs>(args);
  }
  async promotions<T extends Prisma.PromotionsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PromotionsFindUniqueArgs>
  ): Promise<PrismaPromotions | null> {
    return this.prisma.promotions.findUnique(args);
  }
  async createPromotions<T extends Prisma.PromotionsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PromotionsCreateArgs>
  ): Promise<PrismaPromotions> {
    return this.prisma.promotions.create<T>(args);
  }
  async updatePromotions<T extends Prisma.PromotionsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PromotionsUpdateArgs>
  ): Promise<PrismaPromotions> {
    return this.prisma.promotions.update<T>(args);
  }
  async deletePromotions<T extends Prisma.PromotionsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PromotionsDeleteArgs>
  ): Promise<PrismaPromotions> {
    return this.prisma.promotions.delete(args);
  }
}
