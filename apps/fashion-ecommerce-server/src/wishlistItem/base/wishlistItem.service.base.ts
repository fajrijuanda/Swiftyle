/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, WishlistItem as PrismaWishlistItem } from "@prisma/client";

export class WishlistItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WishlistItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.wishlistItem.count(args);
  }

  async wishlistItems<T extends Prisma.WishlistItemFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.WishlistItemFindManyArgs>
  ): Promise<PrismaWishlistItem[]> {
    return this.prisma.wishlistItem.findMany<Prisma.WishlistItemFindManyArgs>(
      args
    );
  }
  async wishlistItem<T extends Prisma.WishlistItemFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.WishlistItemFindUniqueArgs>
  ): Promise<PrismaWishlistItem | null> {
    return this.prisma.wishlistItem.findUnique(args);
  }
  async createWishlistItem<T extends Prisma.WishlistItemCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WishlistItemCreateArgs>
  ): Promise<PrismaWishlistItem> {
    return this.prisma.wishlistItem.create<T>(args);
  }
  async updateWishlistItem<T extends Prisma.WishlistItemUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WishlistItemUpdateArgs>
  ): Promise<PrismaWishlistItem> {
    return this.prisma.wishlistItem.update<T>(args);
  }
  async deleteWishlistItem<T extends Prisma.WishlistItemDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.WishlistItemDeleteArgs>
  ): Promise<PrismaWishlistItem> {
    return this.prisma.wishlistItem.delete(args);
  }
}
