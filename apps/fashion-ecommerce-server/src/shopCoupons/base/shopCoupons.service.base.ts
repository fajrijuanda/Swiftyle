/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ShopCoupons as PrismaShopCoupons } from "@prisma/client";

export class ShopCouponsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ShopCouponsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.shopCoupons.count(args);
  }

  async shopCouponsItems<T extends Prisma.ShopCouponsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShopCouponsFindManyArgs>
  ): Promise<PrismaShopCoupons[]> {
    return this.prisma.shopCoupons.findMany<Prisma.ShopCouponsFindManyArgs>(
      args
    );
  }
  async shopCoupons<T extends Prisma.ShopCouponsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShopCouponsFindUniqueArgs>
  ): Promise<PrismaShopCoupons | null> {
    return this.prisma.shopCoupons.findUnique(args);
  }
  async createShopCoupons<T extends Prisma.ShopCouponsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShopCouponsCreateArgs>
  ): Promise<PrismaShopCoupons> {
    return this.prisma.shopCoupons.create<T>(args);
  }
  async updateShopCoupons<T extends Prisma.ShopCouponsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShopCouponsUpdateArgs>
  ): Promise<PrismaShopCoupons> {
    return this.prisma.shopCoupons.update<T>(args);
  }
  async deleteShopCoupons<T extends Prisma.ShopCouponsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShopCouponsDeleteArgs>
  ): Promise<PrismaShopCoupons> {
    return this.prisma.shopCoupons.delete(args);
  }
}
