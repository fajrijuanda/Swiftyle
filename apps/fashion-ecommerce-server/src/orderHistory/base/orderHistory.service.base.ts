/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, OrderHistory as PrismaOrderHistory } from "@prisma/client";

export class OrderHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.OrderHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.orderHistory.count(args);
  }

  async orderHistories<T extends Prisma.OrderHistoryFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderHistoryFindManyArgs>
  ): Promise<PrismaOrderHistory[]> {
    return this.prisma.orderHistory.findMany<Prisma.OrderHistoryFindManyArgs>(
      args
    );
  }
  async orderHistory<T extends Prisma.OrderHistoryFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderHistoryFindUniqueArgs>
  ): Promise<PrismaOrderHistory | null> {
    return this.prisma.orderHistory.findUnique(args);
  }
  async createOrderHistory<T extends Prisma.OrderHistoryCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderHistoryCreateArgs>
  ): Promise<PrismaOrderHistory> {
    return this.prisma.orderHistory.create<T>(args);
  }
  async updateOrderHistory<T extends Prisma.OrderHistoryUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderHistoryUpdateArgs>
  ): Promise<PrismaOrderHistory> {
    return this.prisma.orderHistory.update<T>(args);
  }
  async deleteOrderHistory<T extends Prisma.OrderHistoryDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrderHistoryDeleteArgs>
  ): Promise<PrismaOrderHistory> {
    return this.prisma.orderHistory.delete(args);
  }
}
