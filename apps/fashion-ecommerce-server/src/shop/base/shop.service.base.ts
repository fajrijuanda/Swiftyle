/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Shop as PrismaShop } from "@prisma/client";

export class ShopServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ShopCountArgs, "select">): Promise<number> {
    return this.prisma.shop.count(args);
  }

  async shops<T extends Prisma.ShopFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShopFindManyArgs>
  ): Promise<PrismaShop[]> {
    return this.prisma.shop.findMany<Prisma.ShopFindManyArgs>(args);
  }
  async shop<T extends Prisma.ShopFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShopFindUniqueArgs>
  ): Promise<PrismaShop | null> {
    return this.prisma.shop.findUnique(args);
  }
  async createShop<T extends Prisma.ShopCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShopCreateArgs>
  ): Promise<PrismaShop> {
    return this.prisma.shop.create<T>(args);
  }
  async updateShop<T extends Prisma.ShopUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShopUpdateArgs>
  ): Promise<PrismaShop> {
    return this.prisma.shop.update<T>(args);
  }
  async deleteShop<T extends Prisma.ShopDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShopDeleteArgs>
  ): Promise<PrismaShop> {
    return this.prisma.shop.delete(args);
  }
}
