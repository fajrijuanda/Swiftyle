/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CartItem as PrismaCartItem } from "@prisma/client";

export class CartItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CartItemCountArgs, "select">): Promise<number> {
    return this.prisma.cartItem.count(args);
  }

  async cartItems<T extends Prisma.CartItemFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CartItemFindManyArgs>
  ): Promise<PrismaCartItem[]> {
    return this.prisma.cartItem.findMany<Prisma.CartItemFindManyArgs>(args);
  }
  async cartItem<T extends Prisma.CartItemFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CartItemFindUniqueArgs>
  ): Promise<PrismaCartItem | null> {
    return this.prisma.cartItem.findUnique(args);
  }
  async createCartItem<T extends Prisma.CartItemCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CartItemCreateArgs>
  ): Promise<PrismaCartItem> {
    return this.prisma.cartItem.create<T>(args);
  }
  async updateCartItem<T extends Prisma.CartItemUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CartItemUpdateArgs>
  ): Promise<PrismaCartItem> {
    return this.prisma.cartItem.update<T>(args);
  }
  async deleteCartItem<T extends Prisma.CartItemDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CartItemDeleteArgs>
  ): Promise<PrismaCartItem> {
    return this.prisma.cartItem.delete(args);
  }
}
