/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Preferences as PrismaPreferences } from "@prisma/client";

export class PreferencesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PreferencesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.preferences.count(args);
  }

  async preferencesItems<T extends Prisma.PreferencesFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PreferencesFindManyArgs>
  ): Promise<PrismaPreferences[]> {
    return this.prisma.preferences.findMany<Prisma.PreferencesFindManyArgs>(
      args
    );
  }
  async preferences<T extends Prisma.PreferencesFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PreferencesFindUniqueArgs>
  ): Promise<PrismaPreferences | null> {
    return this.prisma.preferences.findUnique(args);
  }
  async createPreferences<T extends Prisma.PreferencesCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PreferencesCreateArgs>
  ): Promise<PrismaPreferences> {
    return this.prisma.preferences.create<T>(args);
  }
  async updatePreferences<T extends Prisma.PreferencesUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PreferencesUpdateArgs>
  ): Promise<PrismaPreferences> {
    return this.prisma.preferences.update<T>(args);
  }
  async deletePreferences<T extends Prisma.PreferencesDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PreferencesDeleteArgs>
  ): Promise<PrismaPreferences> {
    return this.prisma.preferences.delete(args);
  }
}
