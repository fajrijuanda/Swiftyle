/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Shipping as PrismaShipping } from "@prisma/client";

export class ShippingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ShippingCountArgs, "select">): Promise<number> {
    return this.prisma.shipping.count(args);
  }

  async shippings<T extends Prisma.ShippingFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShippingFindManyArgs>
  ): Promise<PrismaShipping[]> {
    return this.prisma.shipping.findMany<Prisma.ShippingFindManyArgs>(args);
  }
  async shipping<T extends Prisma.ShippingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShippingFindUniqueArgs>
  ): Promise<PrismaShipping | null> {
    return this.prisma.shipping.findUnique(args);
  }
  async createShipping<T extends Prisma.ShippingCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShippingCreateArgs>
  ): Promise<PrismaShipping> {
    return this.prisma.shipping.create<T>(args);
  }
  async updateShipping<T extends Prisma.ShippingUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShippingUpdateArgs>
  ): Promise<PrismaShipping> {
    return this.prisma.shipping.update<T>(args);
  }
  async deleteShipping<T extends Prisma.ShippingDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShippingDeleteArgs>
  ): Promise<PrismaShipping> {
    return this.prisma.shipping.delete(args);
  }
}
