/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Addresses as PrismaAddresses } from "@prisma/client";

export class AddressesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AddressesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.addresses.count(args);
  }

  async addressesItems<T extends Prisma.AddressesFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AddressesFindManyArgs>
  ): Promise<PrismaAddresses[]> {
    return this.prisma.addresses.findMany<Prisma.AddressesFindManyArgs>(args);
  }
  async addresses<T extends Prisma.AddressesFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AddressesFindUniqueArgs>
  ): Promise<PrismaAddresses | null> {
    return this.prisma.addresses.findUnique(args);
  }
  async createAddresses<T extends Prisma.AddressesCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AddressesCreateArgs>
  ): Promise<PrismaAddresses> {
    return this.prisma.addresses.create<T>(args);
  }
  async updateAddresses<T extends Prisma.AddressesUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AddressesUpdateArgs>
  ): Promise<PrismaAddresses> {
    return this.prisma.addresses.update<T>(args);
  }
  async deleteAddresses<T extends Prisma.AddressesDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AddressesDeleteArgs>
  ): Promise<PrismaAddresses> {
    return this.prisma.addresses.delete(args);
  }
}
